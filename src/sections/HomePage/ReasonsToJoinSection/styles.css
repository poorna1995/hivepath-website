:root {
  --card-height: 40vh;
  --card-margin: 4vh;
  --card-top-offset: 1em;
  --numcards: 8;
  --outline-width: 0px;
}

#cards {
  list-style: none;
  list-style-position: outside;
  margin: auto;

  padding-bottom: calc(
    var(--numcards) * var(--card-top-offset)
  ); /* Make place at bottom, as items will slide to that position*/
  margin-bottom: var(
    --card-margin
  ); /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
}

#card_1 {
  --index: 1;
}

#card_2 {
  --index: 2;
}

#card_3 {
  --index: 3;
}

#card_4 {
  --index: 4;
}
#card_5 {
  --index: 5;
}
#card_6 {
  --index: 6;
}

.card {
  position: sticky;
  top: 10%;
  padding-top: calc(var(--index) * var(--card-top-offset));
}

@supports (animation-timeline: works) {
  @scroll-timeline cards-element-scrolls-in-body {
    source: selector(body);
    scroll-offsets:
			/* Start when the start edge touches the top of the scrollport */ selector(
          #cards
        )
        start 1,
      /* End when the start edge touches the start of the scrollport */
        selector(#cards) start 0;
    start: selector(#cards) start 1; /* Start when the start edge touches the top of the scrollport */
    end: selector(#cards) start 0; /* End when the start edge touches the start of the scrollport */
    time-range: 4s;
  }

  .card {
    --index0: calc(var(--index) - 1); /* 0-based index */
    --reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
    --reverse-index0: calc(
      var(--reverse-index) - 1
    ); /* 0-based reverse index */
  }

  .card__content {
    transform-origin: 50% 0%;
    will-change: transform;

    --duration: calc(var(--reverse-index0) * 1s);
    --delay: calc(var(--index0) * 1s);

    animation: var(--duration) linear scale var(--delay) forwards;
    animation-timeline: cards-element-scrolls-in-body;
  }

  @keyframes scale {
    to {
      transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
    }
  }
}

#cards {
  list-style: none;
  padding-inline-start: 0px;
  outline: calc(var(--outline-width) * 10) solid blue;

  /* display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: repeat(var(--numcards), var(--card-height)); */
  /* gap: var(--card-margin); */
}

.card {
  outline: var(--outline-width) solid hotpink;
}

.card__content {
  background-color: #1d1d1f;
  color: white;
  border-radius: 1em;
  overflow: hidden;

  box-shadow: 0px -2px 5px -1px rgb(0 0 0 / 70%);
}
